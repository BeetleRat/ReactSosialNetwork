{"version":3,"file":"static/js/52.8e898c75.chunk.js","mappings":"oJACA,MAAiC,kC,gECUjC,EARkB,SAACA,GACf,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA0BC,UACtCH,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,KAGtB,C,+ECRA,EAA8B,uCAA9B,EAA6E,iC,4BCa7E,EAZ0B,SAAHC,GAAiC,IAA5BC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAST,GAAKU,EAAAA,EAAAA,GAAAH,EAAAI,GACzCC,EAAqBH,EAAKI,SAAWJ,EAAKK,MAC9C,OACIC,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAyB,KAAOS,EAAqBT,EAAmB,IAAIC,SAAA,EACxFH,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,YAAAe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAeR,GAAWR,MAE7BY,IAAsBX,EAAAA,EAAAA,KAAA,QAAAG,SAAOK,EAAKK,UAG/C,C,mICXA,EAA+B,kCAA/B,EAAiJ,gCCAjJ,GAAiB,E,SCajB,EAZgB,SAACd,GACb,OACIe,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAWc,UAAUb,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OAAAG,SACKJ,EAAMkB,QAEXH,EAAAA,EAAAA,MAAA,OAAAX,SAAA,CAAK,mCACOJ,EAAMmB,WAI9B,E,uCCTIC,GAAcC,EAAAA,EAAAA,GAAU,IAgB5B,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,QAAhC,EAfoB,SAACvB,GACjB,OACIe,EAAAA,EAAAA,MAAA,QAAMS,SAAUxB,EAAMyB,aAAarB,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACC,GAAG,cAAcC,KAAK,cAAcC,YAAY,iCAAQC,UAAWC,EAAAA,EACnEC,SAAU,CAACC,EAAAA,EAAeb,QAErCnB,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,UAAQ0B,GAAG,gBAAgBC,KAAK,gBAAexB,SAAC,0GAKhE,ICIA,EAjBY,SAACJ,GAKT,OACIe,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACIW,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,oCACJH,EAAAA,EAAAA,KAACiC,EAAW,CAACV,SARR,SAACW,GACd,OAAOnC,EAAMoC,WAAWD,EAASE,YACrC,QAQQpC,EAAAA,EAAAA,KAAA,OAAAG,SACKJ,EAAMsC,MAAMC,KAAI,SAAAC,GAAI,OAAEvC,EAAAA,EAAAA,KAACwC,EAAO,CAAevB,KAAMsB,EAAKtB,KAAMC,MAAOqB,EAAKrB,OAAtCqB,EAAKb,GAAyC,QAInG,E,uBCnB0Ce,EAAAA,c,QC2D1C,EAvDIA,EAAAA,MACI,SAAC1C,GAGG,IAAA2C,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS5C,EAAMkD,QAAOC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3CC,EAAMC,EAAA,GAAEC,EAASD,EAAA,IAEtBE,EAAAA,EAAAA,YACI,kBAAMD,EAAUpD,EAAMkD,OAAO,GAC7B,CAAClD,EAAMkD,SAsBX,OACIjD,EAAAA,EAAAA,KAAA,OAAAG,SAEQ2C,GACMhC,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOqD,QAAQ,cAAalD,SAAC,4CAC7BH,EAAAA,EAAAA,KAAA,SAAO0B,GAAG,cAAcC,KAAK,cAAc2B,KAAK,OACzCC,MAAON,EACPO,SAdG,SAACC,GAC3B,IAAIR,EAASQ,EAAMC,OAAOH,MAE1BJ,EAAUF,EACd,EAU4DU,OAtBxC,SAACF,GAEjBV,GAAY,GAEZ,IAAIE,EAASQ,EAAMC,OAAOH,MAC1BxD,EAAM6D,aAAa7D,EAAM8D,WAAYZ,EACzC,EAiB2Ba,WAAW,QAEpB9D,EAAAA,EAAAA,KAAA,OAAAG,UACEW,EAAAA,EAAAA,MAAA,KAAGa,KAAK,SAASoC,cA/BlB,WAEfhB,GAAY,EAChB,EA4B+D5C,SAAA,CACA,yCAC9B8C,GAAkB,mBAOvD,IClBR,EAhCoB,SAAClD,GACjB,OAAKA,EAAMiE,MAOPlD,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAwBC,SAAA,EAOpCW,EAAAA,EAAAA,MAAA,OAAKa,KAAK,cAAaxB,SAAA,EACnBH,EAAAA,EAAAA,KAAA,MAAI2B,KAAK,WAAUxB,SAAEJ,EAAMiE,KAAKC,YAChCjE,EAAAA,EAAAA,KAAA,OAAK2B,KAAK,QAAQ1B,UAAWC,EACxBE,IAA2B,KAAtBL,EAAMiE,KAAKE,OAAgBC,EAAgBpE,EAAMiE,KAAKE,OAAQE,IAAI,yEAE5EpE,EAAAA,EAAAA,KAACqE,EAAsB,CAACpB,OAAQlD,EAAMiE,KAAKf,OAAQE,UAAWpD,EAAMoD,UAAWS,aAAc7D,EAAM6D,aAAcC,WAAY9D,EAAM8D,cACnI/C,EAAAA,EAAAA,MAAA,KAAGa,KAAK,UAASxB,SAAA,CAAC,yCAASJ,EAAMiE,KAAKM,YACtCxD,EAAAA,EAAAA,MAAA,KAAGa,KAAK,OAAMxB,SAAA,CAAC,mCAAQJ,EAAMiE,KAAKO,QAE9BxE,EAAMiE,KAAKQ,gBAAiB1D,EAAAA,EAAAA,MAAA,KAAAX,SAAA,CAAG,4DAAaJ,EAAMiE,KAAKS,wBAA4B,OAI3FzE,EAAAA,EAAAA,KAAC0E,EAAK,CAACrC,MAAOtC,EAAMsC,MAAOF,WAAYpC,EAAM4E,cA1B1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,GA6BzB,E,8BCvCaC,EAAiB,SAACC,GAC3B,OAAOA,EAAMC,YAAYf,IAC7B,EAEagB,EAAkB,SAACF,GAC5B,OAAOA,EAAMC,YAAYE,UAC7B,E,SCOMC,EAAoB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CA2BrB,OA3BqBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,oBAAApC,MAKtB,WAEI,IAAIqC,EAASC,KAAK9F,MAAM+F,MAAMC,OAAOH,OAEhCA,IAEGA,EADAC,KAAK9F,MAAMiG,OACFH,KAAK9F,MAAM8D,WAEX,IAGjBgC,KAAK9F,MAAMkG,WAAWL,EAC1B,GAAC,CAAAD,IAAA,SAAApC,MAED,WAEI,OACIvD,EAAAA,EAAAA,KAACkG,EAAW,CAAClC,KAAM6B,KAAK9F,MAAMiE,KAAM3B,MAAOwD,KAAK9F,MAAMsC,MACzCsC,QAASkB,KAAK9F,MAAM4E,QACpBxB,UAAW0C,KAAK9F,MAAMoD,UAAWS,aAAciC,KAAK9F,MAAM6D,aAC1DC,WAAYgC,KAAK9F,MAAM8D,YAE5C,KAACqB,CAAA,CA3BqB,CAASzC,EAAAA,WA4CnC,GAAe0D,EAAAA,EAAAA,IACXC,EAAAA,IACAC,EAAAA,EAAAA,KAXkB,SAACvB,GACnB,MAAO,CACHd,KAAMa,EAAeC,GACrBzC,MAAO2C,EAAgBF,GACvBjB,YAAYyC,EAAAA,EAAAA,IAAexB,GAC3BkB,QAAQO,EAAAA,EAAAA,IAAUzB,GAE1B,GAI6B,CAACH,QAAAA,EAAAA,GAASsB,WAAAA,EAAAA,GAAYrC,aAAAA,EAAAA,GAAcT,UAAAA,EAAAA,KAFjE,CAGE+B,E","sources":["Components/CommonComponents/Preloader/Preloader.module.css","Components/CommonComponents/Preloader/Preloader.js","webpack://social-network/./src/Components/CommonComponents/ValidatedComponents/ValidatedTexarea/ValidatedTextarea.module.css?5dff","Components/CommonComponents/ValidatedComponents/ValidatedTexarea/ValidatedTextarea.js","webpack://social-network/./src/Components/MyProfile/ProfileInfo.module.css?21ea","webpack://social-network/./src/Components/MyProfile/Posts/OnePost/OnePostModule.css?e227","Components/MyProfile/Posts/OnePost/OnePost.js","Components/MyProfile/Posts/PostForm/AddPostForm.js","Components/MyProfile/Posts/Posts.js","Components/MyProfile/ProfileStatus/ProfileStatusClassComponent.js","Components/MyProfile/ProfileStatus/ProfileStatusWithHooks.js","Components/MyProfile/ProfileInfo.js","Redux/Selectors/ProfileSelectors.js","Components/MyProfile/ProfileInfoContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"preloaderStyle\":\"Preloader_preloaderStyle__CtlpX\"};","import styleClass from \"./Preloader.module.css\"\r\nimport image from \"../../../assets/images/preloder.gif\"\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={styleClass.preloaderStyle}>\r\n            <img src={image}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"ValidatedTextarea_formControl__pjV-W\",\"error\":\"ValidatedTextarea_error__QfE5k\"};","import styleClass from \"./ValidatedTextarea.module.css\"\r\n\r\nconst ValidatedTextarea = ({input, meta, ...props}) => {\r\n    let isValidationFailed = meta.touched && meta.error;\r\n    return (\r\n        <div className={styleClass.formControl + \" \" + (isValidationFailed ? styleClass.error : \"\")}>\r\n            <div>\r\n                <textarea  {...input} {...props}/>\r\n            </div>\r\n            {isValidationFailed && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ValidatedTextarea;","// extracted by mini-css-extract-plugin\nexport default {\"contentStyle\":\"ProfileInfo_contentStyle__o8cHY\",\"contentWallpaperStyle\":\"ProfileInfo_contentWallpaperStyle__Nw+nn\",\"photoStyle\":\"ProfileInfo_photoStyle__e0WER\"};","// extracted by mini-css-extract-plugin\nexport default {};","import styleClass from \"./OnePostModule.css\"\r\n\r\nconst OnePost = (props) => {\r\n    return(\r\n        <div className={styleClass.postStyle}>\r\n            <div>\r\n                {props.text}\r\n            </div>\r\n            <div>\r\n                Лайки: {props.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default OnePost;","import {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, requiredField} from \"../../../../utills/validators/validators\";\r\nimport ValidatedTextarea from \"../../../CommonComponents/ValidatedComponents/ValidatedTexarea/ValidatedTextarea\";\r\n\r\nlet maxLength15 = maxLength(15);\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field id=\"newPostText\" name=\"newPostText\" placeholder='Ответ' component={ValidatedTextarea}\r\n                       validate={[requiredField, maxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <button id=\"addPostButton\" name=\"addPostButton\">Опубликовать пост</button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default reduxForm({form: 'post'})(AddPostForm)","import styleClass from \"./Posts.module.css\"\r\n// Подключение компонентов\r\nimport OnePost from \"./OnePost/OnePost\";\r\nimport AddPostForm from \"./PostForm/AddPostForm\";\r\n\r\nconst Posts=(props)=>{\r\n    const AddNewPost=(formData)=>{\r\n        return props.addNewPost(formData.newPostText);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <h3>Посты</h3>\r\n                <AddPostForm onSubmit={AddNewPost} />\r\n            </div>\r\n            <div>\r\n                {props.posts.map(post=><OnePost key={post.id} text={post.text} likes={post.likes}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Posts;","import React from \"react\";\r\n\r\nclass ProfileStatusClassComponent extends React.PureComponent {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (this.state !== prevState) {\r\n    //\r\n    //     }\r\n    // }\r\n\r\n    editModeON() {\r\n        this.setState(\r\n            {\r\n                editMode: true\r\n            }\r\n        );\r\n    }\r\n\r\n    editModeOFF() {\r\n        this.setState(\r\n            {\r\n                editMode: false\r\n            }\r\n        );\r\n\r\n        this.props.updateStatus(this.props.authUserID, this.state.status);\r\n    }\r\n\r\n    changeInputTextStatus(event) {\r\n        let status = event.target.value;\r\n\r\n        return this.props.setStatus(status);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.editMode\r\n                        ? <div>\r\n                            <label htmlFor=\"statusInput\">Статус: </label>\r\n                            <input id=\"statusInput\" name=\"statusInput\" type=\"text\" value={this.props.status}\r\n                                   onChange={this.changeInputTextStatus.bind(this)} onBlur={this.editModeOFF.bind(this)}\r\n                                   autoFocus={true}/>\r\n                        </div>\r\n                        : <div>\r\n                            <p name=\"status\"\r\n                               onDoubleClick={this.editModeON.bind(this)}>Статус: {this.props.status ? this.props.status : \"No status.\"}</p>\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatusClassComponent;","import styleClass from \"./ProfileStatus.module.css\"\r\nimport React from \"react\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks =\r\n    React.memo(\r\n        (props) => {\r\n\r\n            // Локальный state через hook-и\r\n            let [editMode, setEditMode] = useState(false);\r\n            let [status, setStatus] = useState(props.status);\r\n\r\n            useEffect(\r\n                () => setStatus(props.status),\r\n                [props.status]\r\n            );\r\n\r\n            const editModeON = () => {\r\n                // Используем setter из useState\r\n                setEditMode(true);\r\n            }\r\n\r\n            const editModeOFF = (event) => {\r\n                // Используем setter из useState\r\n                setEditMode(false);\r\n\r\n                let status = event.target.value;\r\n                props.updateStatus(props.authUserID, status);\r\n            }\r\n\r\n            const changeInputTextStatus = (event) => {\r\n                let status = event.target.value;\r\n                // Используем setter из useState\r\n                setStatus(status);\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    {\r\n                        editMode // Используем переменную из useState\r\n                            ? <div>\r\n                                <label htmlFor=\"statusInput\">Статус: </label>\r\n                                <input id=\"statusInput\" name=\"statusInput\" type=\"text\"\r\n                                       value={status} // Используем переменную из useState\r\n                                       onChange={changeInputTextStatus} onBlur={editModeOFF}\r\n                                       autoFocus={true}/>\r\n                            </div>\r\n                            : <div>\r\n                                <p name=\"status\" onDoubleClick={editModeON}>\r\n                                    {/*Используем переменную из useState*/}\r\n                                    Статус: {status ? status : \"No status.\"}\r\n                                </p>\r\n                            </div>\r\n                    }\r\n\r\n                </div>\r\n            );\r\n        }\r\n    )\r\n\r\nexport default ProfileStatusWithHooks;","// Подключение класса стилей\r\nimport styleClass from \"./ProfileInfo.module.css\"\r\nimport Posts from \"./Posts/Posts\";\r\nimport Preloader from \"../CommonComponents/Preloader/Preloader\";\r\nimport defaultAvatar from \"../../assets/images/defaultAvatar.png\";\r\nimport ProfileStatusClassComponent from \"./ProfileStatus/ProfileStatusClassComponent\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.user) {\r\n        return <Preloader/>;\r\n    }\r\n\r\n    return (\r\n        /*Использование стиля contentStyle\r\n        из класса стилей styleClass*/\r\n        <div className={styleClass.contentStyle}>\r\n\r\n            {/*<div>*/}\r\n            {/*    <img name=\"wallpaper\" className={styleClass.contentWallpaperStyle}*/}\r\n            {/*         src='https://glass-vector.com/static2/preview2/stock-vector-kuhonnyy-fartuk-1644-14813.jpg'*/}\r\n            {/*         alt=\"Обои\"/>*/}\r\n            {/*</div>*/}\r\n            <div name=\"profileInfo\">\r\n                <h3 name=\"nickname\">{props.user.nickname}</h3>\r\n                <img name=\"photo\" className={styleClass.photoStyle}\r\n                     src={props.user.imgURL === \"\" ? defaultAvatar : props.user.imgURL} alt=\"Фото профиля\"/>\r\n\r\n                <ProfileStatusWithHooks status={props.user.status} setStatus={props.setStatus} updateStatus={props.updateStatus} authUserID={props.authUserID}/>\r\n                <p name=\"country\">Страна: {props.user.country}</p>\r\n                <p name=\"city\">Город: {props.user.city}</p>\r\n                {\r\n                    props.user.lookingForAJob ? <p>Ищу работу: {props.user.searchJobDescription}</p> : \"\"\r\n                }\r\n            </div>\r\n\r\n            <Posts posts={props.posts} addNewPost={props.addPost}/>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","export const getProfileUser = (state) => {\r\n    return state.profilePage.user;\r\n}\r\n\r\nexport const getProfilePosts = (state) => {\r\n    return state.profilePage.postsArray;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport {addPost, setProfile, setStatus, updateStatus} from \"../../Redux/Redusers/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getProfilePosts, getProfileUser} from \"../../Redux/Selectors/ProfileSelectors\";\r\nimport {getAuthUsersID, getIsAuth} from \"../../Redux/Selectors/AuthSelectors\";\r\n\r\n\r\n// Классовая контейнерная компонента\r\n// Осуществляет взаимодействие с сервером\r\n\r\nclass ProfileInfoContainer extends React.Component {\r\n\r\n    // Метод жизненного цикла\r\n    // вызываемый при вставке классового компонента в общую разметку\r\n    // данный метод выполняется 1 раз.\r\n    componentDidMount() {\r\n        // Берем параметр userID из URL адреса\r\n        let userID = this.props.match.params.userID;\r\n        // Если в URL нет такого параметра(userID==undefined)\r\n        if (!userID) {\r\n            if (this.props.isAuth) {\r\n                userID = this.props.authUserID;\r\n            } else {\r\n                userID = 23;\r\n            }\r\n        }\r\n        this.props.setProfile(userID)\r\n    }\r\n\r\n    render() {\r\n        // Отрисовка презентационной компоненты\r\n        return (\r\n            <ProfileInfo user={this.props.user} posts={this.props.posts}\r\n                         addPost={this.props.addPost}\r\n                         setStatus={this.props.setStatus} updateStatus={this.props.updateStatus}\r\n                         authUserID={this.props.authUserID}/>\r\n        )\r\n    }\r\n}\r\n\r\n// Стрелочная функция возвращающая\r\n// объект данных\r\n// передаваемых в презентационную компоненту\r\n// (в данном случае данные сначала прокидываются в другую контейнерную компоненту,\r\n// а из нее в презентационную)\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        user: getProfileUser(state),\r\n        posts: getProfilePosts(state),\r\n        authUserID: getAuthUsersID(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(MapStateToProps, {addPost, setProfile, updateStatus, setStatus})\r\n)(ProfileInfoContainer);"],"names":["props","_jsx","className","styleClass","children","src","image","_ref","input","meta","_objectWithoutProperties","_excluded","isValidationFailed","touched","error","_jsxs","_objectSpread","postStyle","text","likes","maxLength15","maxLength","reduxForm","form","onSubmit","handleSubmit","Field","id","name","placeholder","component","ValidatedTextarea","validate","requiredField","AddPostForm","formData","addNewPost","newPostText","posts","map","post","OnePost","React","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","htmlFor","type","value","onChange","event","target","onBlur","updateStatus","authUserID","autoFocus","onDoubleClick","user","nickname","imgURL","defaultAvatar","alt","ProfileStatusWithHooks","country","city","lookingForAJob","searchJobDescription","Posts","addPost","Preloader","getProfileUser","state","profilePage","getProfilePosts","postsArray","ProfileInfoContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userID","this","match","params","isAuth","setProfile","ProfileInfo","compose","withRouter","connect","getAuthUsersID","getIsAuth"],"sourceRoot":""}