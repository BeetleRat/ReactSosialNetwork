{"version":3,"file":"static/js/898.09b7086d.chunk.js","mappings":"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","sources":["webpack://social-network/./src/Components/CommonComponents/ValidatedComponents/ValidatedTexarea/ValidatedTextarea.module.css?5dff","Components/CommonComponents/ValidatedComponents/ValidatedTexarea/ValidatedTextarea.js","Components/Dialog/Dialog.module.css","Components/Dialog/UserName/UserName.module.css","Components/Dialog/UserName/UserName.js","Components/Dialog/Message/Message.module.css","Components/Dialog/Message/Message.js","Components/Dialog/DialogForm/DialogForm.js","Components/Dialog/Dialog.js","Redux/Selectors/DialogSelectors.js","Components/Dialog/DialogContainer.js","HOC/WithAuthRedirect.js","Utills/Validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"ValidatedTextarea_formControl__pjV-W\",\"error\":\"ValidatedTextarea_error__QfE5k\"};","import styleClass from \"./ValidatedTextarea.module.css\"\r\nimport classNames from \"classnames\"\r\n\r\nconst ValidatedTextarea = ({input, meta, ...props}) => {\r\n    let isValidationFailed = meta.touched && meta.error;\r\n    return (\r\n        <div className={classNames(styleClass.formControl, {[styleClass.error]: isValidationFailed})}>\r\n            <div>\r\n                <textarea  {...input} {...props}/>\r\n            </div>\r\n            {isValidationFailed && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ValidatedTextarea;","// extracted by mini-css-extract-plugin\nexport default {\"dialogsStyle\":\"Dialog_dialogsStyle__kF5TS\",\"userNameStyle\":\"Dialog_userNameStyle__fFhWq\",\"messagesStyle\":\"Dialog_messagesStyle__LBE0K\"};","// extracted by mini-css-extract-plugin\nexport default {\"userNameStyle\":\"UserName_userNameStyle__Z+IZC\"};","import styleClass from \"./UserName.module.css\"\r\n\r\nconst UserName = ({name}) =>{\r\n    return(\r\n        <div className={styleClass.userNameStyle}>\r\n            {name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserName;","// extracted by mini-css-extract-plugin\nexport default {\"messageStyle\":\"Message_messageStyle__1qzaw\"};","import styleClass from \"./Message.module.css\"\r\n\r\nconst Message = ({text}) => {\r\n    return(\r\n        <div className={styleClass.messageStyle}>\r\n            {text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport ValidatedTextarea from \"../../CommonComponents/ValidatedComponents/ValidatedTexarea/ValidatedTextarea\";\r\nimport {maxLength, requiredField} from \"../../../Utills/Validators/validators\";\r\n\r\nlet maxLength15 = maxLength(15);\r\n\r\nconst DialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field id=\"newDialogMessage\" name=\"newDialogMessage\" placeholder='Ответ' component={ValidatedTextarea}\r\n                       validate={[requiredField, maxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <button id=\"addNewMessage\" name=\"addNewMessage\">Ответить</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({form: 'dialog'})(DialogForm)\r\n","// Подключение класса стиля\r\nimport styleClass from './Dialog.module.css'\r\n// Подключение компонентов\r\nimport UserName from \"./UserName/UserName\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogForm from \"./DialogForm/DialogForm\";\r\nimport React from \"react\";\r\n\r\nconst Dialog =\r\n    React.memo(\r\n        (props) => {\r\n\r\n            const AddNewMessage = (formData) => {\r\n                return props.sendNewMessage(formData.newDialogMessage);\r\n            };\r\n\r\n            return (\r\n                <div className={styleClass.dialogsStyle}>\r\n                    <div className={styleClass.userNameStyle}>\r\n                        {/*Полная запись метода map создающего массив компонентов UserName*/}\r\n                        {props.names.map((name) => {\r\n                            return <UserName key={name.id} id={name.id} name={name.name}/>;\r\n                        })}\r\n                    </div>\r\n                    <div className={styleClass.messagesStyle}>\r\n                        <div>\r\n                            {/*Сокращенная запись метода map создающего массив компонентов Message*/}\r\n                            {props.messageArray.map(message => <Message key={message.id} text={message.text}/>)}\r\n                        </div>\r\n                        <div>\r\n                            <DialogForm onSubmit={AddNewMessage}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    );\r\nexport default Dialog;","export const getNameArray=(state)=>{\r\n    return state.dialogPage.nameArray;\r\n}\r\n\r\nexport const getMessageArray=(state)=>{\r\n    return state.dialogPage.messageArray;\r\n}","import {connect} from \"react-redux\";\r\nimport {sendNewMessage} from \"../../Redux/Reducers/DialogReducer\";\r\nimport Dialog from \"./Dialog\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getMessageArray, getNameArray} from \"../../Redux/Selectors/DialogSelectors\";\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        names: getNameArray(state),\r\n        messageArray: getMessageArray(state)\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {sendNewMessage}),\r\n    withAuthRedirect\r\n)(Dialog);","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    // Создаваемый контейнерный компонент\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return (<Redirect to='/login'/>);\r\n            }\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    let MapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        };\r\n    };\r\n\r\n\r\n    // Возвращаем созданный\r\n    return connect(MapStateToProps, {})(RedirectComponent);\r\n}","export const requiredField = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n\r\n    return \"Обязательное поле\";\r\n}\r\n\r\nexport const maxLength = (maxLength) => {\r\n    return (value) => {\r\n        if (value && value.length > maxLength) {\r\n            return `Максимальная длинна ${maxLength} символов`;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}"],"names":["_ref","input","meta","props","_objectWithoutProperties","_excluded","isValidationFailed","touched","error","_jsxs","className","classNames","styleClass","_defineProperty","children","_jsx","_objectSpread","name","text","maxLength15","maxLength","reduxForm","form","onSubmit","handleSubmit","Field","id","placeholder","component","ValidatedTextarea","validate","requiredField","React","names","map","UserName","messageArray","message","Message","DialogForm","formData","sendNewMessage","newDialogMessage","getNameArray","state","dialogPage","nameArray","getMessageArray","compose","connect","withAuthRedirect","Dialog","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","isAuth","Redirect","to","auth","length","concat"],"sourceRoot":""}