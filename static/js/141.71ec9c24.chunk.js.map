{"version":3,"file":"static/js/141.71ec9c24.chunk.js","mappings":"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","sources":["Components/CommonComponents/Preloader/Preloader.module.css","Components/CommonComponents/Preloader/Preloader.js","Redux/Selectors/UserSelectors.js","Redux/Selectors/LoadingSelectors.js","Components/Users/UsersContainer.js","HOC/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"preloaderStyle\":\"Preloader_preloaderStyle__CtlpX\"};","import styleClass from \"./Preloader.module.css\"\r\nimport image from \"../../../Assets/Images/preloder.gif\"\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={styleClass.preloaderStyle}>\r\n            <img src={image} alt={\"Loading image\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export const getUsers = (state) => {\r\n    return state.userPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.userPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.userPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.userPage.currentPage;\r\n}\r\n\r\nexport const getFetchingUsers = (state) => {\r\n    return state.userPage.fetchingUsers;\r\n}\r\n\r\n","export const getIsLoading = (state) => {\r\n    return state.userPage.isLoading;\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    followUser, requestUsersFromServer,\r\n    setCurrentPage,\r\n    toggleFetchingUser,\r\n    unfollowUser\r\n} from \"../../Redux/Reducers/UserReducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../CommonComponents/Preloader/Preloader\";\r\nimport {\r\n\r\n    getCurrentPage, getFetchingUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/Selectors/UserSelectors\";\r\nimport {getIsLoading} from \"../../Redux/Selectors/LoadingSelectors\";\r\nimport {getIsAuth, getAuthUsersID} from \"../../Redux/Selectors/AuthSelectors\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\n\r\nclass UsersContainer extends React.PureComponent {\r\n\r\n    // Метод жизненного цикла\r\n    // вызываемый при вставке классового компонента в общую разметку\r\n    // данный метод выполняется 1 раз.\r\n    componentDidMount() {\r\n        this.GetUsersFromServer(this.props.currentPage - 1);\r\n    }\r\n\r\n    GetUsersFromServer(page) {\r\n        this.props.getUsersFromServer(page, this.props.pageSize);\r\n    };\r\n\r\n    // Метод нажания на \"кнопку\" страницы\r\n    // Если метод вызываетя внутри разметки,\r\n    // то он должен описываться через стрелочную функцию\r\n    changePage = (newPage) => {\r\n        this.props.setCurrentPage(newPage);\r\n        this.GetUsersFromServer(newPage - 1);\r\n    }\r\n\r\n    // Перегрузка метода суперкласса\r\n    // метод возвращающий JSX разметку\r\n    // Поскольку данная компонента тоже является контейнерной,\r\n    // то в данном методе возвращается презентационная компонента\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    // Отобразить Preloader, если нужно\r\n                    this.props.isLoading && <Preloader/>\r\n                }\r\n                <Users users={this.props.users} fetchingUsers={this.props.fetchingUsers}\r\n                       totalUsers={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize} currentPage={this.props.currentPage}\r\n                       isAuth={this.props.isAuth} currentUserID={this.props.currentUserID}\r\n                       changePage={this.changePage}\r\n                       followUser={this.props.followUser} unfollowUser={this.props.unfollowUser}\r\n                       toggleFetchingUser={this.props.toggleFetchingUser}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        fetchingUsers: getFetchingUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        isAuth: getIsAuth(state),\r\n        currentUserID: getAuthUsersID(state)\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(\r\n        MapStateToProps,\r\n        {\r\n            followUser,\r\n            unfollowUser,\r\n            setCurrentPage,\r\n            toggleFetchingUser,\r\n            getUsersFromServer: requestUsersFromServer\r\n        }\r\n    )\r\n)(UsersContainer);","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    // Создаваемый контейнерный компонент\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return (<Redirect to='/login'/>);\r\n            }\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    let MapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        };\r\n    };\r\n\r\n\r\n    // Возвращаем созданный\r\n    return connect(MapStateToProps, {})(RedirectComponent);\r\n}"],"names":["props","_jsx","className","styleClass","children","src","image","alt","getUsers","state","userPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getFetchingUsers","fetchingUsers","getIsLoading","isLoading","UsersContainer","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","changePage","newPage","setCurrentPage","GetUsersFromServer","_createClass","key","value","this","page","getUsersFromServer","_jsxs","Preloader","Users","totalUsers","isAuth","currentUserID","followUser","unfollowUser","toggleFetchingUser","React","compose","withAuthRedirect","connect","getIsAuth","getAuthUsersID","requestUsersFromServer","Component","RedirectComponent","_React$Component","_objectSpread","Redirect","to","auth"],"sourceRoot":""}